/*
 *
 */

import "robobeerun-templates/affinities.stg"
import "robobeerun-templates/tolerations.stg"
import "robobeerun-templates/resources.stg"
import "robobeerun-templates/tcp_probe.stg"

dd-es-master-yaml(parent, vars) ::= <<
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: robobeerun-com-elastic
  labels:
    component: elasticsearch
    role: master
spec:
  replicas: <vars.elasticMaster.replicas>
  selector:
    matchLabels:
      component: elasticsearch
      role: master
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
    spec:
      containers:
      - image: <vars.elasticMaster.image.name>:<vars.elasticMaster.image.version>
        name: elasticsearch
        env:
        - name: CLUSTER_NAME
          value: logs
        - name: NUMBER_OF_MASTERS
          value: "<vars.elasticMaster.replicas>"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_INGEST
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: NETWORK_HOST
          value: "0.0.0.0"
        - name: TRANSPORT_TLS_PEM_PASS
          value: "<vars.elastic.cert.elkPass>"
        - name: HTTP_TLS_PEM_PASS
          value: "<vars.elastic.cert.elkPass>"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: elasticsearch-discovery
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: -Xms<vars.elasticMaster.heap.start> -Xmx<vars.elasticMaster.heap.max>
        ports:
        - containerPort: 9300
          name: transport
        - containerPort: 9200
          name: http
        - containerPort: 9600
          name: metrics
        <tcpProbesPortGroup(vars.elasticMaster, "transport")>
        <resourcesGroup(vars.elasticMaster)>
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
        - mountPath: /usr/share/elasticsearch/config/elk-crt.pem
          name: certs
          subPath: elk-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-key.pem
          name: certs
          subPath: elk-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-root-ca.pem
          name: certs
          subPath: elk-root-ca.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-crt.pem
          name: certs
          subPath: admin-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-key.pem
          name: certs
          subPath: admin-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-root-ca.pem
          name: certs
          subPath: admin-root-ca.pem
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: elasticsearch-<vars.elastic.revision>
      - name: certs
        secret:
          secretName: elasticsearch-tls-data-<vars.elastic.revision>
      <affinitiesGroup(vars.elasticMaster.affinity)>
      <tolerationMasterGroup(vars.elasticMaster.allowOnMaster)>
      <tolerationsGroup(vars.elasticMaster.tolerations, vars.elasticMaster.allowOnMaster)>
>>
