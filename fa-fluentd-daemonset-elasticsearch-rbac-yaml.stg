/*
 *
 */

import "robobeerun-templates/affinities.stg"
import "robobeerun-templates/tolerations.stg"
import "robobeerun-templates/resources.stg"
import "robobeerun-templates/tcp_probe.stg"
import "robobeerun-templates/cert_config.stg"
import "robobeerun-templates/ingress_config.stg"

fa-fluentd-daemonset-elasticsearch-rbac-yaml(parent, vars) ::= <<
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: robobeerun-com-elastic

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: robobeerun-com-elastic
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: robobeerun-com-elastic
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: robobeerun-com-elastic
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      containers:
      - name: fluentd
        image: <vars.fluentd.image.name>:<vars.fluentd.image.version>
        env:
          - name:  FLUENT_ELASTICSEARCH_HOST
            value: "https://elasticsearch.robobeerun-com-elastic.svc"
          - name:  FLUENT_ELASTICSEARCH_PORT
            value: "9200"
          - name: FLUENT_ELASTICSEARCH_SCHEME
            value: "https"
          - name: FLUENT_ELASTICSEARCH_USER
            value: "logstash"
          - name: FLUENT_ELASTICSEARCH_PASSWORD
            value: "<vars.elastic.users.logstash.password>"
        <resourcesGroup(vars.fluentd)>
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: pos
          mountPath: /pos
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - mountPath: /fluentd/etc/kubernetes.conf
          name: etc
          subPath: kubernetes.conf
      <affinitiesGroup(vars.fluentd.affinity)>
      <tolerationMasterGroup(vars.fluentd.allowOnMaster)>
      <tolerationsGroup(vars.fluentd.tolerations, vars.fluentd.allowOnMaster)>
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etc
        configMap:
          name: fluentd-etc-<vars.fluentd.revision>
      - name: pos
        hostPath:
          path: /var/fluentd/pos
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-etc-<vars.fluentd.revision>
  namespace: robobeerun-com-elastic
data:
  kubernetes.conf: |
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/kubernetes.conf.erb

    \<match fluent.**>
      @type null
    \</match>

    \<source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /pos/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      \<parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_minion
      path /var/log/salt/minion
      pos_file /pos/fluentd-salt.pos
      tag salt
      \<parse>
        @type regexp
        expression /^(?\<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?\<severity>[^ \]]*) *\] (?\<message>.*)$/
        time_format %Y-%m-%d %H:%M:%S
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_startupscript
      path /var/log/startupscript.log
      pos_file /pos/fluentd-startupscript.log.pos
      tag startupscript
      \<parse>
        @type syslog
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_docker
      path /var/log/docker.log
      pos_file /pos/fluentd-docker.log.pos
      tag docker
      \<parse>
        @type regexp
        expression /^time="(?\<time>[^)]*)" level=(?\<severity>[^ ]*) msg="(?\<message>[^"]*)"( err="(?\<error>[^"]*)")?( statusCode=($\<status_code>\d+))?/
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_etcd
      path /var/log/etcd.log
      pos_file /pos/fluentd-etcd.log.pos
      tag etcd
      \<parse>
        @type none
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_kubelet
      multiline_flush_interval 5s
      path /var/log/kubelet.log
      pos_file /pos/fluentd-kubelet.log.pos
      tag kubelet
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_kube_proxy
      multiline_flush_interval 5s
      path /var/log/kube-proxy.log
      pos_file /pos/fluentd-kube-proxy.log.pos
      tag kube-proxy
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_kube_apiserver
      multiline_flush_interval 5s
      path /var/log/kube-apiserver.log
      pos_file /pos/fluentd-kube-apiserver.log.pos
      tag kube-apiserver
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_kube_controller_manager
      multiline_flush_interval 5s
      path /var/log/kube-controller-manager.log
      pos_file /pos/fluentd-kube-controller-manager.log.pos
      tag kube-controller-manager
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_kube_scheduler
      multiline_flush_interval 5s
      path /var/log/kube-scheduler.log
      pos_file /pos/fluentd-kube-scheduler.log.pos
      tag kube-scheduler
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_rescheduler
      multiline_flush_interval 5s
      path /var/log/rescheduler.log
      pos_file /pos/fluentd-rescheduler.log.pos
      tag rescheduler
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_glbc
      multiline_flush_interval 5s
      path /var/log/glbc.log
      pos_file /pos/fluentd-glbc.log.pos
      tag glbc
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    \<source>
      @type tail
      @id in_tail_cluster_autoscaler
      multiline_flush_interval 5s
      path /var/log/cluster-autoscaler.log
      pos_file /pos/fluentd-cluster-autoscaler.log.pos
      tag cluster-autoscaler
      \<parse>
        @type kubernetes
      \</parse>
    \</source>

    # Example:
    # 2017-02-09T00:15:57.992775796Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" ip="104.132.1.72" method="GET" user="kubecfg" as="\<self>" asgroups="\<lookup>" namespace="default" uri="/api/v1/namespaces/default/pods"
    # 2017-02-09T00:15:57.993528822Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" response="200"
    \<source>
      @type tail
      @id in_tail_kube_apiserver_audit
      multiline_flush_interval 5s
      path /var/log/kubernetes/kube-apiserver-audit.log
      pos_file /pos/kube-apiserver-audit.log.pos
      tag kube-apiserver-audit
      \<parse>
        @type multiline
        format_firstline /^\S+\s+AUDIT:/
        # Fields must be explicitly captured by name to be parsed into the record.
        # Fields may not always be present, and order may change, so this just looks
        # for a list of key="\"quoted\" value" pairs separated by spaces.
        # Unknown fields are ignored.
        # Note: We can't separate query/response lines as format1/format2 because
        #       they don't always come one after the other for a given query.
        format1 /^(?\<time>\S+) AUDIT:(?: (?:id="(?\<id>(?:[^"\\]|\\.)*)"|ip="(?\<ip>(?:[^"\\]|\\.)*)"|method="(?\<method>(?:[^"\\]|\\.)*)"|user="(?\<user>(?:[^"\\]|\\.)*)"|groups="(?\<groups>(?:[^"\\]|\\.)*)"|as="(?\<as>(?:[^"\\]|\\.)*)"|asgroups="(?\<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?\<namespace>(?:[^"\\]|\\.)*)"|uri="(?\<uri>(?:[^"\\]|\\.)*)"|response="(?\<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
        time_format %Y-%m-%dT%T.%L%Z
      \</parse>
    \</source>

    \<filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
    \</filter>

---

>>
