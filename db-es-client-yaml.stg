/*
 *
 */

import "robobeerun-templates/affinities.stg"
import "robobeerun-templates/tolerations.stg"
import "robobeerun-templates/resources.stg"
import "robobeerun-templates/tcp_probe.stg"

db-es-client-yaml(parent, vars) ::= <<
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: elasticsearch
    role: client
  name: es-client
  namespace: robobeerun-com-elastic
spec:
  replicas: <vars.elasticClient.replicas>
  selector:
    matchLabels:
      component: elasticsearch
      role: client
  template:
    metadata:
      labels:
        component: elasticsearch
        role: client
    spec:
      serviceAccountName: elasticsearch
      initContainers:
      - name: init-sysctl
        image: busybox:1.27.2
        command:
        - sysctl
        - -w
        - vm.max_map_count=262144
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        env:
        - name: CLUSTER_NAME
          value: logs
        - name: NUMBER_OF_MASTERS
          value: "<vars.elasticMaster.replicas>"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "true"
        - name: NODE_DATA
          value: "false"
        - name: TRANSPORT_TLS_PEM_PASS
          value: "<vars.elastic.cert.elkPass>"
        - name: HTTP_TLS_PEM_PASS
          value: "<vars.elastic.cert.elkPass>"
        - name: NETWORK_HOST
          value: "_eth0_"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISCOVERY_SERVICE
          value: elasticsearch-discovery
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROCESSORS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: ES_JAVA_OPTS
          value: -Xms<vars.elasticClient.heap.start> -Xmx<vars.elasticClient.heap.max>
        image: <vars.elastic.image.name>:<vars.elastic.image.version>
        imagePullPolicy: Always
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        - containerPort: 9600
          name: metrics
        <tcpProbesPortGroup(vars.elasticClient, "transport")>
        <resourcesGroup(vars.elasticClient)>
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: config
          subPath: elasticsearch.yml
        - mountPath: /usr/share/elasticsearch/config/logging.yml
          name: config
          subPath: logging.yml
        - mountPath: /usr/share/elasticsearch/config/elk-crt.pem
          name: certs
          subPath: elk-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-key.pem
          name: certs
          subPath: elk-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/elk-root-ca.pem
          name: certs
          subPath: elk-root-ca.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-crt.pem
          name: certs
          subPath: admin-crt.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-key.pem
          name: certs
          subPath: admin-key.pem
          readOnly: true
        - mountPath: /usr/share/elasticsearch/config/admin-root-ca.pem
          name: certs
          subPath: admin-root-ca.pem
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: elasticsearch-<vars.elastic.revision>
      - name: certs
        secret:
          secretName: elasticsearch-tls-data-<vars.elastic.revision>
      <affinitiesGroup(vars.elasticClient.affinity)>
      <tolerationClientGroup(vars.elasticClient.allowOnClient)>
      <tolerationsGroup(vars.elasticClient.tolerations, vars.elasticClient.allowOnClient)>

>>
